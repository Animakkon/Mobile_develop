import{_ as a,c as i,o as e,a as n}from"./app-DNN2HtZY.js";const t="/Mobile_develop/assets/P2_C2-1_pic4-BVgPQwIg.png",r="/Mobile_develop/assets/P2_C2-1_pic5-ZDN5J9rC.png",l={},s=n('<h1 id="_2-операционная-система-android-запуск-приложении" tabindex="-1"><a class="header-anchor" href="#_2-операционная-система-android-запуск-приложении"><span>2 ОПЕРАЦИОННАЯ СИСТЕМА ANDROID. ЗАПУСК ПРИЛОЖЕНИЙ</span></a></h1><p>Мобильное приложение – программа, предназначенная для работы на мобильном устройстве. Она состоит из инструкций, которые должны быть понятны для исполнения процессором. Процессор, в свою очередь, управляет работой операционной системы в соответствии с полученными последовательностями к выполнению. Это учит нас тому, что разработчик должен знать или понимать основы управления той операционной системой, для которой он будет писать программу.</p><p>Разные операционные системы диктуют свои правила написания программ. Таким образом, программа, написанная для Android, не может быть исполнена в iOS или Windows.</p><p>В некоторых случаях, необходимо не только понимать особенности взаимодействия программы с операционной системы, но также и особенности работы с разными типами процессоров. Хотя существуют стандартизированные виды архитектур, некоторые производители могут вносить свои изменения. В рамках данного курса не будут затрагиваться особенности разработки под конкретные процессоры, однако, разработчиком мобильных приложений приходится учитывать и данный момент.</p><p>Подавляющее число студентов имеют в обращении ноутбуки и смартфоны разных фирм, поэтому, в данном курсе упор будет произведен в сторону создания приложений для ОС Android, поскольку разработка под данную ОС не требует наличия специального оборудования и программного обеспечения. В материале ниже рассмотрим теоретические вопросы касательно архитектуры данной операционной системы.</p><h2 id="_2-1-архитектура-операционнои-системы" tabindex="-1"><a class="header-anchor" href="#_2-1-архитектура-операционнои-системы"><span>2.1 Архитектура операционной системы</span></a></h2><p>Операционная система Android – свободно поставляемое программное обеспечение на базе ядра Linux изобретенное для широкого перечня устройств разного назначения (бытовая техника, смартфоны, планшеты и т.д.). Она состоит из нескольких слоев (рисунок 4). Каждый уровень предоставляет определенные службы для выполнения конкретных задач и использует возможности нижнего слоя, если это необходимо для выполнения функции.</p><p><img src="'+t+'" alt="Слои операционной системы Android"></p><p>Стэк технологий (набор инструментов, применяющийся при работе) операционной системы включает:</p><ul><li>Ядро (Linux Kernel)</li><li>Системные службы (Hardware Abstraction Layer)</li><li>Нативные библиотеки (Native Libraries)</li><li>Виртуальная машина (Android Runtime)</li><li>Интерфейсы Java</li><li>Системные приложения</li></ul><p>На рисунке 5 приведена более подробная архитектура операционной системы. <img src="'+r+'" alt="Архитектура операционной системы Android"></p><p><strong>Linux Kernel</strong> Ядро – базовый уровень информационных систем, предоставляющий основные службы, драйверы для взаимодействия с оборудованием, файловые системы, службы для управления потоками и процессами, доступами к сети, интерфейсы для аппаратных устройств и т.д.</p><p><strong>Системные службы</strong> Обеспечивают связь между драйверами и библиотеками. Если рассматривать данный слой детально, то он включает в себя широкий спектр утилит, которые работают и как часть ядра (драйверы и модули ядра), так и приложения с длительным временем запуска для управления служебными задачами или библиотеки для выполнения стандартных функций.</p><p><strong>Android Runtime (Art)</strong> Перед архитекторами системы стояла задача создать такую платформу, которая поставлялась бы на разные устройства, для которых исполняемая программа могла быть написана в единственном экземпляре (а не столько одинаковых программ, сколько устройств и процессоров). Такое кроссплатформенное поведение уже было реализовано в Java - для запуска приложений на данном языке необходима виртуальная машина – Java Virtual Machine (JIT). Поэтому для Android первым и основным языком написания программ был именно этот язык. А для оптимизации запуска приложений на операционной системе использовалась виртуальная машина Android Runtime (ART).</p><p>В основном, выделяют следующие варианты оптимизации, используемые в ART:</p><ul><li>just-in-time (JIT) – файл приложения компилируется (преобразуются) в машинно-читаемый бинарный код (байт-код) во время запуска приложения</li><li>ahead-of-time (AOT) – компиляция байт-кода заранее. Т.е. система сама решает, когда и какой код компилировать.</li></ul><p><strong>Native C/C++ Libraries</strong> Как описано в названии, данный слой предоставляет средства для использования библиотек, написанных на языках C и C++, например, из представленных на рисунке:</p><ul><li>WebKit – представляет из себя движок веб-браузера и другие связанные с ним функции.</li><li>Media Framework – предоставляет медиа кодеки, позволяющие записывать и воспроизводить различные медиа-форматы.</li><li>OpenGL – используется для отображения 2D и 3D графики.</li><li>и т.д.</li></ul><p><strong>Application Framework</strong> Application Framework (каркас приложений) – набор Java классов, предоставляющий приложениям интерфейс к функциям операционной системы и библиотекам. API (Application Programming Interface) – программный интерфейс приложения в виде исполняемых функций для взаимодействия.</p><p><strong>Системные приложения</strong> На вершине стека находятся приложения, которые могут вызывать другие приложения, например: камера, контакты, вызов номера.</p><h2 id="_2-2-компиляция-java-приложении" tabindex="-1"><a class="header-anchor" href="#_2-2-компиляция-java-приложении"><span>2.2 Компиляция Java приложений</span></a></h2><div style="width:100%;padding:20px;background-color:#adbac7;"><span class="red">omg</span></div>',22),o=[s];function p(d,c){return e(),i("div",null,o)}const m=a(l,[["render",p],["__file","part2.html.vue"]]),h=JSON.parse('{"path":"/document/part2.html","title":"2 ОПЕРАЦИОННАЯ СИСТЕМА ANDROID. ЗАПУСК ПРИЛОЖЕНИЙ","lang":"en-US","frontmatter":{"css":"../utils/styles.css"},"headers":[{"level":2,"title":"2.1 Архитектура операционной системы","slug":"_2-1-архитектура-операционнои-системы","link":"#_2-1-архитектура-операционнои-системы","children":[]},{"level":2,"title":"2.2 Компиляция Java приложений","slug":"_2-2-компиляция-java-приложении","link":"#_2-2-компиляция-java-приложении","children":[]}],"git":{"updatedTime":1722601875000,"contributors":[{"name":"Animakkon","email":"lada.dunskaya@mail.ru","commits":2}]},"filePathRelative":"document/part2.md"}');export{m as comp,h as data};
